89
main IDENTIFIER 0 1 1
( LP 0 1 5
) RP 0 1 6
{ LC 0 2 1
int KEYWORD 0 3 1
a IDENTIFIER 0 3 5
, SS 0 3 6
b IDENTIFIER 0 3 7
[ LSB 0 3 8
10 NUMBER 0 3 9
] RSB 0 3 11
, SS 0 3 12
c IDENTIFIER 0 3 13
; SS 0 3 14
char KEYWORD 0 4 1
d IDENTIFIER 0 4 6
; SS 0 4 7
c IDENTIFIER 0 5 1
= ASSIGN 0 5 2
20 NUMBER 0 5 3
; SS 0 5 5
d IDENTIFIER 0 6 1
= ASSIGN 0 6 2
A IDENTIFIER 0 6 3
; SS 0 6 4
if KEYWORD 0 7 1
( LP 0 7 3
a IDENTIFIER 0 7 4
> RLOP 0 7 5
c IDENTIFIER 0 7 6
) RP 0 7 7
{ LC 0 8 1
b IDENTIFIER 0 9 1
= ASSIGN 0 9 2
a IDENTIFIER 0 9 3
+ ADD 0 9 4
c IDENTIFIER 0 9 5
; SS 0 9 6
} RC 0 10 1
for KEYWORD 0 11 1
( LP 0 11 4
i IDENTIFIER 0 11 5
= ASSIGN 0 11 6
0 NUMBER 0 11 7
; SS 0 11 8
i IDENTIFIER 0 11 9
< RLOP 0 11 10
n IDENTIFIER 0 11 11
; SS 0 11 12
i IDENTIFIER 0 11 13
= ASSIGN 0 11 14
i IDENTIFIER 0 11 15
+ ADD 0 11 16
1 NUMBER 0 11 17
) RP 0 11 18
{ LC 0 12 1
if KEYWORD 0 13 1
( LP 0 13 3
b IDENTIFIER 0 13 4
> RLOP 0 13 5
c IDENTIFIER 0 13 6
) RP 0 13 7
{ LC 0 14 1
a IDENTIFIER 0 15 1
= ASSIGN 0 15 2
b IDENTIFIER 0 15 3
; SS 0 15 4
} RC 0 16 1
else KEYWORD 0 17 1
{ LC 0 18 1
c IDENTIFIER 0 19 1
= ASSIGN 0 19 2
b IDENTIFIER 0 19 3
; SS 0 19 4
} RC 0 20 1
} RC 0 21 1
while KEYWORD 0 22 1
( LP 0 22 7
a IDENTIFIER 0 22 8
!= RLOP 0 22 9
b IDENTIFIER 0 22 11
) RP 0 22 12
{ LC 0 23 1
d IDENTIFIER 0 24 1
= ASSIGN 0 24 2
a IDENTIFIER 0 24 3
; SS 0 24 4
} RC 0 25 1
} RC 0 26 1
